<?xml version="1.0" encoding="GB2312" ?>
<SQLTEST>
	<CONTENT> -00001-该测试用例用来测试......</CONTENT><!-- 用例描述 -->
	<CONNECT></CONNECT><!-- 连接数据库 -->
	<SQL_CASE><!-- 一个语句段落，该关键字用来组织用例，让它容易阅读 -->
		<TYPE>DIRECT_EXECUTE_FAIL</TYPE><!-- 预期执行结果：返回错误-->
		<SQLSTATE>42000</SQLSTATE><!-- 预期执行报错返回的状态码 -->
		<SQL>CREATE TABLE T00001_00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000(C1 INT);</SQL>
	</SQL_CASE>
	<SQL_CASE>
		<TYPE>DIRECT_EXECUTE_SUCCESS</TYPE>
		<SQL>CREATE TABLE T00001_1(C1 INT,C2 CHAR(10));</SQL><!-- 用例SQL语句 -->
		<SQL>INSERT INTO T00001_1 VALUES(1,'ABC');</SQL>
		<SQL>INSERT INTO T00001_1 VALUES(2,'DEF');</SQL>
	</SQL_CASE>	
	<SQL_CASE>
		<TYPE> DIRECT_EXECUTE_SELECT_WITH_RESULT </TYPE><!-- 预期执行成功，并返回一个结果集，但不对它验证，只验证其返回的列名 -->		
		<SQL>SELECT * FROM T00001_1;</SQL>
		<RESULT>
			<RECORD>
				<COLUMN>C1</COLUMN><COLUMN>C2</COLUMN>
			</RECORD>
		</RESULT>
	</SQL_CASE>
	<SQL_CASE>
		<TYPE>DIRECT_EXECUTE_SELECT_COMPARE_RESULT</TYPE><!-- 预期执行结果：返回一个结果集，并检察返回的结果集 -->
		<SQL>SELECT * FROM T00001_1;</SQL>
		<RESULT><!-- 预期语句执行后返回结果集部分，该关键字用来标识结果集开始 -->
			<RECORD><!-- 该关键字用来标识结果集的每一行 -->
				<COLUMN>1</COLUMN><!-- 该差键字用来标识结果集每一行的每一列 -->
				<COLUMN>ABC</COLUMN><!-- 给出要比较的列，如果第二列不想被用来比较，那么该列可以不给出，如果不给出第二列，那么，后面的第三第四列就不能给出。注：至少有一行应该给出结果集的在该行上的全部列值 -->
			</RECORD>
			<RECORD>
				<COLUMN>2</COLUMN>
				<COLUMN>DEF</COLUMN>
			</RECORD>
		</RESULT>
	</SQL_CASE>
	<SQL_CASE>
		<EXEXML>TEST1.XML</EXEXML><!-- 执行另一个XML文件 -->
		<EXEXML>TEST\TEST1.XML</EXEXML>
	</SQL_CASE>
	<SQL_CASE>
		<EXEPROCESS>TEST1.EXE</EXEPROCESS><!-- 执行一个可执行程序（EXE文件） -->
		<EXEPROCESS>TEST\TEST1.EXE</EXEPROCESS>
	</SQL_CASE>
	<SQL_CASE>
		<TYPE>DIRECT_EXECUTE_SUCCESS</TYPE>
		<SQL>CREATE DATABASE ODBCTEST DATAFILE 'ODBCTEST' SIZE 50;</SQL>
		<SQL>CREATE USER ODBCTEST AT ODBCTEST;</SQL>
		<SQL>CREATE LOGIN ODBCTEST IDENTIFIED BY ODBCTEST;</SQL>
		<SQL>ALTER LOGIN ODBCTEST ADD USER ODBCTEST AT ODBCTEST;</SQL>
		<SQL>SET CURRENT DATABASE ODBCTEST;</SQL>
		<SQL>GRANT DBA TO ODBCTEST;</SQL>
		<NEWCONNECTEXECUTE><!-- 新建一个连接，用该结果提供的连接串连接服务器，并且当前连接不断开 -->
			<UID>ODBCTEST</UID><!-- 登录ID -->
			<PWD>ODBCTEST</PWD><!-- 登录口令 -->
			<DATABASE>ODBCTEST</DATABASE><!-- 初始化库 -->
			<CONNECT></CONNECT><!-- 连接 -->
			<SQL_CASE>
				<TYPE>DIRECT_EXECUTE_SUCCESS</TYPE>
				<SQL>CREATE TABLE T00001_1(C1 INT,C2 CHAR(10));</SQL>
				<SQL>INSERT INTO T00001_1 VALUES(1,'ABC');</SQL>
				<SQL>INSERT INTO T00001_1 VALUES(2,'DEF');</SQL>
			</SQL_CASE>
			<DISCONNECT></DISCONNECT><!-- 断开连接，这个可以不写，执行结束后程序会自动断开 -->
		</NEWCONNECTEXECUTE>
	</SQL_CASE>
	<SQL_CASE>
		<UID>ODBCTEST</UID>
		<PWD>ODBCTEST</PWD>
		<DATABASE>ODBCTEST</DATABASE>
		<RECONNECT></RECONNECT><!-- 断开当前的连接，并根据重新新的信息重新连接 -->
		<SQL_CASE>
			<TYPE>DIRECT_EXECUTE_SUCCESS</TYPE>
			<SQL>INSERT INTO T00001_1 VALUES(3,'ABC');</SQL>
			<SQL>INSERT INTO T00001_1 VALUES(4,'DEF');</SQL>
		</SQL_CASE>
	</SQL_CASE>
	<CLEAR><!-- 测试用例清除快，该关键字标识清除块开始。如果上面某条语句执行出错后，程序会自动跳到这块来做环境清除工作 -->
		<UID>SYSDBA</UID>
		<PWD>SYSDBA</PWD>
		<DATABASE>SYSTEM</DATABASE>
		<RECONNECT></RECONNECT><!-- 断开当前的连接，并根据重新新的信息重新连接 -->
		<SQL_CASE>
			<TYPE>DIRECT_EXECUTE_SUCCESS</TYPE>
			<SQL>SET CURRENT DATABASE SYSTEM;</SQL>
			<SQL>DROP TABLE T00001_1;</SQL>
			<SQL>DROP DATABASE ODBCTEST;</SQL>			
			<SQL>DROP LOGIN ODBCTEST;</SQL>
		</SQL_CASE>	
	</CLEAR>
</SQLTEST>